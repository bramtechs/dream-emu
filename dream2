let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd X:/
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +1 dream/src/dreams.c
badd +1 dream/src/dreams.h
badd +50 magma/src/entity.h
badd +122 magma/src/entity.c
badd +13 magma/src/array.c
badd +19 magma/src/array.h
badd +0 magma/src/memory.h
badd +0 magma/raylib/src/raylib.h
badd +44 dream/src/client.c
badd +5 dream/src/client.h
badd +1 dev/dream-emu/dream/src/scene.h
badd +106 dream/src/scene.c
badd +16 magma/src/assets.c
badd +29 magma/src/assets.h
badd +0 term://X://5260:C:/Windows/system32/cmd.exe
argglobal
%argdel
$argadd 
set stal=2
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabrewind
edit dream/src/dreams.c
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 118 + 126) / 253)
exe 'vert 2resize ' . ((&columns * 134 + 126) / 253)
argglobal
balt dream/src/dreams.h
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 21 - ((20 * winheight(0) + 35) / 71)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 21
normal! 056|
lcd X:/
wincmd w
argglobal
if bufexists(fnamemodify("X:/dream/src/dreams.h", ":p")) | buffer X:/dream/src/dreams.h | else | edit X:/dream/src/dreams.h | endif
if &buftype ==# 'terminal'
  silent file X:/dream/src/dreams.h
endif
balt X:/dream/src/dreams.c
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 11 - ((10 * winheight(0) + 35) / 71)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 11
normal! 027|
lcd X:/
wincmd w
exe 'vert 1resize ' . ((&columns * 118 + 126) / 253)
exe 'vert 2resize ' . ((&columns * 134 + 126) / 253)
tabnext
edit X:/magma/src/entity.h
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 126 + 126) / 253)
exe 'vert 2resize ' . ((&columns * 126 + 126) / 253)
argglobal
balt X:/dream/src/dreams.c
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 42 - ((35 * winheight(0) + 35) / 70)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 42
normal! 047|
lcd X:/
wincmd w
argglobal
if bufexists(fnamemodify("X:/magma/src/entity.c", ":p")) | buffer X:/magma/src/entity.c | else | edit X:/magma/src/entity.c | endif
if &buftype ==# 'terminal'
  silent file X:/magma/src/entity.c
endif
balt X:/magma/src/entity.h
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 91 - ((28 * winheight(0) + 35) / 70)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 91
normal! 0
lcd X:/
wincmd w
exe 'vert 1resize ' . ((&columns * 126 + 126) / 253)
exe 'vert 2resize ' . ((&columns * 126 + 126) / 253)
tabnext
edit X:/magma/src/array.c
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 126 + 126) / 253)
exe 'vert 2resize ' . ((&columns * 126 + 126) / 253)
argglobal
balt X:/magma/src/entity.c
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 39 - ((38 * winheight(0) + 35) / 70)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 39
normal! 0
lcd X:/
wincmd w
argglobal
if bufexists(fnamemodify("X:/magma/src/array.h", ":p")) | buffer X:/magma/src/array.h | else | edit X:/magma/src/array.h | endif
if &buftype ==# 'terminal'
  silent file X:/magma/src/array.h
endif
balt X:/magma/src/array.c
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 19 - ((18 * winheight(0) + 35) / 70)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 19
normal! 032|
lcd X:/
wincmd w
exe 'vert 1resize ' . ((&columns * 126 + 126) / 253)
exe 'vert 2resize ' . ((&columns * 126 + 126) / 253)
tabnext
edit X:/magma/src/memory.h
argglobal
balt X:/magma/src/array.c
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 1 - ((0 * winheight(0) + 35) / 70)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1
normal! 0
lcd X:/
tabnext
edit X:/dream/src/client.c
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 126 + 126) / 253)
exe 'vert 2resize ' . ((&columns * 126 + 126) / 253)
argglobal
balt X:/magma/src/memory.h
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 44 - ((43 * winheight(0) + 35) / 70)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 44
normal! 017|
lcd X:/
wincmd w
argglobal
if bufexists(fnamemodify("X:/dream/src/client.h", ":p")) | buffer X:/dream/src/client.h | else | edit X:/dream/src/client.h | endif
if &buftype ==# 'terminal'
  silent file X:/dream/src/client.h
endif
balt X:/dream/src/client.c
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 5 - ((4 * winheight(0) + 35) / 70)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 5
normal! 0
lcd X:/
wincmd w
exe 'vert 1resize ' . ((&columns * 126 + 126) / 253)
exe 'vert 2resize ' . ((&columns * 126 + 126) / 253)
tabnext
edit X:/magma/src/assets.c
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 157 + 126) / 253)
exe '2resize ' . ((&lines * 35 + 37) / 74)
exe 'vert 2resize ' . ((&columns * 95 + 126) / 253)
exe '3resize ' . ((&lines * 34 + 37) / 74)
exe 'vert 3resize ' . ((&columns * 95 + 126) / 253)
argglobal
balt X:/dream/src/client.h
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 16 - ((15 * winheight(0) + 35) / 70)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 16
normal! 021|
lcd X:/
wincmd w
argglobal
if bufexists(fnamemodify("X:/magma/src/assets.h", ":p")) | buffer X:/magma/src/assets.h | else | edit X:/magma/src/assets.h | endif
if &buftype ==# 'terminal'
  silent file X:/magma/src/assets.h
endif
balt X:/magma/src/assets.c
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 19 - ((18 * winheight(0) + 17) / 35)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 19
normal! 0
lcd X:/
wincmd w
argglobal
if bufexists(fnamemodify("X:/magma/src/array.h", ":p")) | buffer X:/magma/src/array.h | else | edit X:/magma/src/array.h | endif
if &buftype ==# 'terminal'
  silent file X:/magma/src/array.h
endif
balt X:/magma/src/assets.h
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 19 - ((18 * winheight(0) + 17) / 34)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 19
normal! 026|
lcd X:/
wincmd w
exe 'vert 1resize ' . ((&columns * 157 + 126) / 253)
exe '2resize ' . ((&lines * 35 + 37) / 74)
exe 'vert 2resize ' . ((&columns * 95 + 126) / 253)
exe '3resize ' . ((&lines * 34 + 37) / 74)
exe 'vert 3resize ' . ((&columns * 95 + 126) / 253)
tabnext
edit C:/dev/dream-emu/dream/src/scene.h
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 126 + 126) / 253)
exe 'vert 2resize ' . ((&columns * 126 + 126) / 253)
argglobal
balt X:/dream/src/client.c
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 1 - ((0 * winheight(0) + 35) / 70)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1
normal! 0
lcd X:/
wincmd w
argglobal
if bufexists(fnamemodify("X:/dream/src/scene.c", ":p")) | buffer X:/dream/src/scene.c | else | edit X:/dream/src/scene.c | endif
if &buftype ==# 'terminal'
  silent file X:/dream/src/scene.c
endif
balt C:/dev/dream-emu/dream/src/scene.h
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 107 - ((69 * winheight(0) + 35) / 70)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 107
normal! 0
lcd X:/
wincmd w
exe 'vert 1resize ' . ((&columns * 126 + 126) / 253)
exe 'vert 2resize ' . ((&columns * 126 + 126) / 253)
tabnext
edit X:/magma/raylib/src/raylib.h
argglobal
balt X:/magma/src/memory.h
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 1 - ((0 * winheight(0) + 35) / 70)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1
normal! 0
lcd X:/
tabnext
argglobal
if bufexists(fnamemodify("term://X://5260:C:/Windows/system32/cmd.exe", ":p")) | buffer term://X://5260:C:/Windows/system32/cmd.exe | else | edit term://X://5260:C:/Windows/system32/cmd.exe | endif
if &buftype ==# 'terminal'
  silent file term://X://5260:C:/Windows/system32/cmd.exe
endif
balt X:/magma/raylib/src/raylib.h
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 96 - ((25 * winheight(0) + 35) / 70)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 96
normal! 026|
lcd X:/
tabnext 6
set stal=1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
