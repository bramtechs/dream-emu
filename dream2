let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd X:/
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +29 dream/src/client.c
badd +5 dream/src/client.h
badd +1 space/client.c
badd +25 magma/src/window.c
badd +1155 magma/raylib/src/raylib.h
badd +65 dream/src/scene.c
badd +11 dream/src/settings.h
badd +37 dream/src/editor.c
badd +42 dream/src/scene.h
badd +36 magma/src/player_fps.c
badd +9 magma/src/player_fps.h
badd +147 Users/bramb/AppData/Local/nvim/init.vim
badd +21 dream/src/dreams.c
badd +22 magma/src/magma.h
badd +3 magma/src/magma.c
badd +38 magma/src/entity.c
badd +45 magma/src/entity.h
badd +0 term://X://1020:C:/Windows/system32/cmd.exe
badd +0 magma/src/array.h
argglobal
%argdel
set stal=2
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabrewind
edit magma/src/window.c
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 126 + 126) / 253)
exe 'vert 2resize ' . ((&columns * 126 + 126) / 253)
argglobal
balt dream/src/client.c
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 29 - ((26 * winheight(0) + 35) / 71)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 29
normal! 027|
lcd X:/
wincmd w
argglobal
if bufexists(fnamemodify("X:/dream/src/client.h", ":p")) | buffer X:/dream/src/client.h | else | edit X:/dream/src/client.h | endif
if &buftype ==# 'terminal'
  silent file X:/dream/src/client.h
endif
balt X:/space/client.c
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 4 - ((3 * winheight(0) + 35) / 71)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 4
normal! 017|
lcd X:/
wincmd w
exe 'vert 1resize ' . ((&columns * 126 + 126) / 253)
exe 'vert 2resize ' . ((&columns * 126 + 126) / 253)
tabnext
edit X:/dream/src/scene.c
argglobal
balt X:/dream/src/scene.h
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 66 - ((30 * winheight(0) + 35) / 71)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 66
normal! 0
lcd X:/
tabnext
edit X:/magma/src/player_fps.h
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd _ | wincmd |
split
1wincmd k
wincmd w
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe '1resize ' . ((&lines * 25 + 37) / 74)
exe 'vert 1resize ' . ((&columns * 126 + 126) / 253)
exe '2resize ' . ((&lines * 45 + 37) / 74)
exe 'vert 2resize ' . ((&columns * 126 + 126) / 253)
exe 'vert 3resize ' . ((&columns * 126 + 126) / 253)
argglobal
balt X:/magma/src/player_fps.c
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 9 - ((8 * winheight(0) + 12) / 25)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 9
normal! 011|
lcd X:/
wincmd w
argglobal
if bufexists(fnamemodify("X:/magma/src/player_fps.c", ":p")) | buffer X:/magma/src/player_fps.c | else | edit X:/magma/src/player_fps.c | endif
if &buftype ==# 'terminal'
  silent file X:/magma/src/player_fps.c
endif
balt X:/dream/src/dreams.c
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 36 - ((35 * winheight(0) + 22) / 45)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 36
normal! 030|
lcd X:/
wincmd w
argglobal
if bufexists(fnamemodify("X:/magma/src/entity.c", ":p")) | buffer X:/magma/src/entity.c | else | edit X:/magma/src/entity.c | endif
if &buftype ==# 'terminal'
  silent file X:/magma/src/entity.c
endif
balt X:/magma/src/entity.h
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 38 - ((37 * winheight(0) + 35) / 71)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 38
normal! 08|
lcd X:/
wincmd w
2wincmd w
exe '1resize ' . ((&lines * 25 + 37) / 74)
exe 'vert 1resize ' . ((&columns * 126 + 126) / 253)
exe '2resize ' . ((&lines * 45 + 37) / 74)
exe 'vert 2resize ' . ((&columns * 126 + 126) / 253)
exe 'vert 3resize ' . ((&columns * 126 + 126) / 253)
tabnext
edit X:/magma/src/array.h
argglobal
balt X:/magma/src/entity.c
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 1 - ((0 * winheight(0) + 35) / 71)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1
normal! 0
lcd X:/
tabnext
edit X:/magma/src/entity.c
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 126 + 126) / 253)
exe 'vert 2resize ' . ((&columns * 126 + 126) / 253)
argglobal
balt X:/dream/src/scene.c
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 39 - ((28 * winheight(0) + 35) / 71)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 39
normal! 014|
lcd X:/
wincmd w
argglobal
if bufexists(fnamemodify("X:/magma/src/entity.h", ":p")) | buffer X:/magma/src/entity.h | else | edit X:/magma/src/entity.h | endif
if &buftype ==# 'terminal'
  silent file X:/magma/src/entity.h
endif
balt X:/magma/src/entity.c
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 37 - ((36 * winheight(0) + 35) / 71)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 37
normal! 024|
lcd X:/
wincmd w
exe 'vert 1resize ' . ((&columns * 126 + 126) / 253)
exe 'vert 2resize ' . ((&columns * 126 + 126) / 253)
tabnext
edit X:/magma/src/window.c
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 2 - ((1 * winheight(0) + 35) / 70)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 2
normal! 0
lcd X:/
tabnext
edit X:/magma/raylib/src/raylib.h
argglobal
balt X:/magma/src/window.c
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 1418 - ((34 * winheight(0) + 35) / 70)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1418
normal! 012|
lcd X:/
tabnext
argglobal
if bufexists(fnamemodify("term://X://1020:C:/Windows/system32/cmd.exe", ":p")) | buffer term://X://1020:C:/Windows/system32/cmd.exe | else | edit term://X://1020:C:/Windows/system32/cmd.exe | endif
if &buftype ==# 'terminal'
  silent file term://X://1020:C:/Windows/system32/cmd.exe
endif
balt X:/magma/raylib/src/raylib.h
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 301 - ((69 * winheight(0) + 35) / 70)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 301
normal! 08|
lcd X:/
tabnext 3
set stal=1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
